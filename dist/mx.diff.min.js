!function(t,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define("diff",[],r):"object"==typeof exports?exports.diff=r():t.diff=r()}("undefined"!=typeof self?self:this,(function(){return function(t){var r={};function e(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=r,e.d=function(t,r,n){e.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,r){if(1&r&&(t=e(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var o in t)e.d(n,o,function(r){return t[r]}.bind(null,o));return n},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,"a",r),r},e.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},e.p="",e(e.s=0)}([function(t,r,e){"use strict";function n(t){return Array.isArray(t)?t:t.split(/\.|\[|\]\[|\]\.|\]/g).filter((function(t){return t}))}function o(t,r){return n(r).reduce((function(t,r){return null==t?void 0:t[r]}),t)}function i(t,r){if(![t,r].includes(void 0)&&t.value!==r.value)return{type:"change",path:t.path,previous:t.value,value:r.value}}function u(t,r){if(void 0===t&&void 0!==r)return{type:"definition",path:r.path,value:r.value}}function a(t,r){if(void 0!==t&&void 0===r)return{type:"deletion",path:t.path,previous:t.value}}function f(t){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t){return function(t){if(Array.isArray(t))return l(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(!t)return;if("string"==typeof t)return l(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return l(t,r)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function y(){for(var t=arguments.length,r=new Array(t),e=0;e<t;e++)r[e]=arguments[e];return c(new Set(r.filter((function(t){return["object","function"].includes(f(t))})).map(Object.keys).flat()))}function p(t){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function s(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{string:"",chain:[]};return{type:p(t),isArray:Array.isArray(t),value:t,path:r}}function d(t){return function(t){if(Array.isArray(t))return b(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(!t)return;if("string"==typeof t)return b(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return b(t,r)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function v(t,r){var e=t.value,n=t.type,o=t.isArray,i=t.path;if("object"===n&&r in e)return s(e[r],{string:"".concat(i.string).concat(o?"[".concat(r,"]"):".".concat(r)),chain:[].concat(d(i.chain),[r])})}function m(t){return function(t){if(Array.isArray(t))return h(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,r){if(!t)return;if("string"==typeof t)return h(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return h(t,r)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}e.r(r);var g=Symbol("diff-private-properties");function S(t){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function j(t,r){for(var e=0;e<r.length;e++){var n=r[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var A=function(){function t(r,e){!function(t,r){if(!(t instanceof r))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(t,r){var e=[t,r].map((function(t){return s(t)}));return function t(){for(var r=arguments.length,e=new Array(r),n=0;n<r;n++)e[n]=arguments[n];var o=y.apply(void 0,m(e.map((function(t){return t.value}))));return o.reduce((function(r,n){var o=e.map((function(t){return v(t,n)}));return[].concat(m(r),m(o.every((function(t){return t&&"object"===t.type}))?t.apply(void 0,m(o)):[i.apply(void 0,m(o))||a.apply(void 0,m(o))||u.apply(void 0,m(o))].filter(Boolean)))}),[])}.apply(void 0,m(e))}(r,e),o=!!n.length||("object"!==S(r)||"object"!==S(e))&&r!==e;Object.defineProperty(this,g,{writable:!0,value:{original:r,derived:e,details:n,hasChanged:o}})}var r,e,f;return r=t,(e=[{key:"filter",value:function(t){return this.details.filter((function(r){return e=t,o=r.path.chain,i=n(e),u=n(o),i.length<=u.length&&i.every((function(t,r){return t===u[r]}));var e,o,i,u}))}},{key:"focusOn",value:function(r){return new t(o(this.original,r),o(this.derived,r))}},{key:"original",get:function(){return this[g].original}},{key:"derived",get:function(){return this[g].derived}},{key:"details",get:function(){return this[g].details}},{key:"hasChanged",get:function(){return this[g].hasChanged}}])&&j(r.prototype,e),f&&j(r,f),t}();r.default=A}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,